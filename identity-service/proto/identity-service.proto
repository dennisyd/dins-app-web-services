syntax = "proto3";

package lasagna.identity.service;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service IdentityService {
    rpc Create(User) returns (Response) {}
    rpc Get(User) returns (Response) {}
    rpc GetAll(Request) returns (Response) {}
    rpc Auth(User) returns (Token) {}
    rpc ValidateToken(Token) returns (Token) {}
}

message User {
     uint32 id = 1 [(gogoproto.moretags) = "gorm:\"primary_key,omitempty\"", (gogoproto.casttype)="uint", (gogoproto.nullable)=true];
     string email = 2;
     string password = 3;
     string first_name = 4;
     string last_name = 5;
     string description = 6;
     string budget = 7;
     string skill = 8;
     Timestamp created_at = 9 [(gogoproto.stdtime)=true];
     Timestamp updated_at = 10 [(gogoproto.stdtime)=true];
}

message Response {
     User user = 1;
    repeated User users = 2;
    repeated Error errors = 3;
     Token token = 4;
}

message Request {}

message Token {
     string token = 1;
     bool valid = 2;
    repeated Error errors = 3;
}

message Error {
     int32 code = 1;
     string description = 2;
}

message Timestamp {

    // Represents seconds of UTC time since Unix epoch
    // 1970-01-01T00:00:00Z. Must be from from 0001-01-01T00:00:00Z to
    // 9999-12-31T23:59:59Z inclusive.
     int64 seconds = 1;
  
    // Non-negative fractions of a second at nanosecond resolution. Negative
    // second values with fractions must still have non-negative nanos values
    // that count forward in time. Must be from 0 to 999,999,999
    // inclusive.
     int32 nanos = 2;
  }